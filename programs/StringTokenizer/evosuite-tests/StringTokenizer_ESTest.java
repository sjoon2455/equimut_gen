/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 24 05:14:53 GMT 2021
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

public class StringTokenizer_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("", "\"M'77cxK<xxfEv");
      assertEquals((-1), stringTokenizer0.newPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals(0, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(120, stringTokenizer0.maxDelimCodePoint);
      assertNotNull(stringTokenizer0);
      
      stringTokenizer0.maxPosition = (-401);
      int int0 = stringTokenizer0.countTokens();
      assertEquals(0, int0);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals((-401), stringTokenizer0.maxPosition);
      assertEquals(120, stringTokenizer0.maxDelimCodePoint);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("", "\"M'77cxK<xxfEv");
      assertEquals(0, stringTokenizer0.maxPosition);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(120, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.delimsChanged);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertNotNull(stringTokenizer0);
      
      stringTokenizer0.maxPosition = (-401);
      // Undeclared exception!
      try { 
        stringTokenizer0.nextElement();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer(" `");
      assertEquals((-1), stringTokenizer0.newPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals(32, stringTokenizer0.maxDelimCodePoint);
      assertEquals(2, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      assertNotNull(stringTokenizer0);
      
      boolean boolean0 = stringTokenizer0.hasMoreElements();
      assertTrue(boolean0);
      assertFalse(stringTokenizer0.retDelims);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals(32, stringTokenizer0.maxDelimCodePoint);
      assertEquals(2, stringTokenizer0.maxPosition);
      assertEquals(1, stringTokenizer0.newPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      
      String string0 = stringTokenizer0.nextToken("tC20 @g-0!|9");
      assertEquals("`", string0);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(2, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(2, stringTokenizer0.maxPosition);
      assertEquals(124, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.delimsChanged);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("", "\"M'77cxK<xxfEv");
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals(120, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(0, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertNotNull(stringTokenizer0);
      
      stringTokenizer0.maxPosition = (-401);
      boolean boolean0 = stringTokenizer0.hasMoreElements();
      assertFalse(boolean0);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals(120, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.retDelims);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals((-401), stringTokenizer0.maxPosition);
      assertEquals(0, stringTokenizer0.newPosition);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("", "ASZ;=j*\"", true);
      assertEquals(0, stringTokenizer0.maxPosition);
      assertEquals(106, stringTokenizer0.maxDelimCodePoint);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertTrue(stringTokenizer0.retDelims);
      assertFalse(stringTokenizer0.delimsChanged);
      assertNotNull(stringTokenizer0);
      
      int int0 = stringTokenizer0.skipDelimiters((-196));
      assertEquals((-196), int0);
      assertEquals(0, stringTokenizer0.maxPosition);
      assertEquals(106, stringTokenizer0.maxDelimCodePoint);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertTrue(stringTokenizer0.retDelims);
      assertFalse(stringTokenizer0.delimsChanged);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("", "\"M'77cxK<xxfEv");
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(0, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(120, stringTokenizer0.maxDelimCodePoint);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertNotNull(stringTokenizer0);
      
      stringTokenizer0.maxPosition = (-401);
      int int0 = stringTokenizer0.scanToken((-214));
      assertEquals((-214), int0);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals((-401), stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(120, stringTokenizer0.maxDelimCodePoint);
      assertEquals(0, stringTokenizer0.currentPosition);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("", "");
      assertEquals(0, stringTokenizer0.maxPosition);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(0, stringTokenizer0.maxDelimCodePoint);
      assertNotNull(stringTokenizer0);
      
      boolean boolean0 = stringTokenizer0.hasMoreElements();
      assertFalse(boolean0);
      assertEquals(0, stringTokenizer0.maxPosition);
      assertEquals(0, stringTokenizer0.newPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(0, stringTokenizer0.maxDelimCodePoint);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("0vZQ3`L)i.Aal\"4u~3");
      assertEquals(0, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.delimsChanged);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(18, stringTokenizer0.maxPosition);
      assertEquals(32, stringTokenizer0.maxDelimCodePoint);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertNotNull(stringTokenizer0);
      
      // Undeclared exception!
      try { 
        stringTokenizer0.skipDelimiters((-3257));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("]gVu-", (String) null, true);
      assertEquals(5, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(0, stringTokenizer0.maxDelimCodePoint);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertTrue(stringTokenizer0.retDelims);
      assertNotNull(stringTokenizer0);
      
      String string0 = stringTokenizer0.nextToken("]gVu-");
      assertEquals("]", string0);
      assertEquals(5, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(1, stringTokenizer0.currentPosition);
      assertEquals(117, stringTokenizer0.maxDelimCodePoint);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertTrue(stringTokenizer0.retDelims);
      assertNotNull(string0);
      
      stringTokenizer0.hasSurrogates = true;
      // Undeclared exception!
      try { 
        stringTokenizer0.scanToken(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("", (String) null);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(0, stringTokenizer0.maxDelimCodePoint);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(0, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertNotNull(stringTokenizer0);
      
      stringTokenizer0.maxPosition = 1;
      // Undeclared exception!
      try { 
        stringTokenizer0.nextToken("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("P:/qD~R j![6k<SK", "P:/qD~R j![6k<SK");
      assertEquals((-1), stringTokenizer0.newPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(17, stringTokenizer0.maxPosition);
      assertEquals(127, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.delimsChanged);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertNotNull(stringTokenizer0);
      
      // Undeclared exception!
      try { 
        stringTokenizer0.nextToken((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("9tqLJ");
      assertEquals(5, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(32, stringTokenizer0.maxDelimCodePoint);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertNotNull(stringTokenizer0);
      
      stringTokenizer0.maxPosition = 2668;
      // Undeclared exception!
      try { 
        stringTokenizer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer(" 2Qd,Q");
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(32, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(6, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertNotNull(stringTokenizer0);
      
      stringTokenizer0.hasSurrogates = true;
      // Undeclared exception!
      try { 
        stringTokenizer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("H4o]el!HnpiKL\u0007D");
      assertEquals(32, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.delimsChanged);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(15, stringTokenizer0.maxPosition);
      assertNotNull(stringTokenizer0);
      
      stringTokenizer0.delimiters = null;
      // Undeclared exception!
      try { 
        stringTokenizer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("", "\"M'77cxK<xxfEv");
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.delimsChanged);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(0, stringTokenizer0.maxPosition);
      assertEquals(120, stringTokenizer0.maxDelimCodePoint);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertNotNull(stringTokenizer0);
      
      // Undeclared exception!
      try { 
        stringTokenizer0.nextElement();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("56Fz|cS", "56Fz|cS");
      assertEquals((-1), stringTokenizer0.newPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals(7, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(124, stringTokenizer0.maxDelimCodePoint);
      assertNotNull(stringTokenizer0);
      
      stringTokenizer0.maxPosition = 823;
      // Undeclared exception!
      try { 
        stringTokenizer0.nextElement();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("l86", "bR xX|80", true);
      assertEquals(3, stringTokenizer0.maxPosition);
      assertTrue(stringTokenizer0.retDelims);
      assertEquals(124, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertNotNull(stringTokenizer0);
      
      stringTokenizer0.hasSurrogates = true;
      // Undeclared exception!
      try { 
        stringTokenizer0.nextElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("", (String) null);
      assertEquals(0, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.delimsChanged);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(0, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertNotNull(stringTokenizer0);
      
      // Undeclared exception!
      try { 
        stringTokenizer0.nextElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("/`}Dc4DjBa");
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(32, stringTokenizer0.maxDelimCodePoint);
      assertEquals(10, stringTokenizer0.maxPosition);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertNotNull(stringTokenizer0);
      
      // Undeclared exception!
      try { 
        stringTokenizer0.isDelimiter(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("", "", false);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(0, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(0, stringTokenizer0.maxPosition);
      assertNotNull(stringTokenizer0);
      
      stringTokenizer0.currentPosition = (-2253);
      // Undeclared exception!
      try { 
        stringTokenizer0.hasMoreTokens();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("$&'51\"*G", "$&'51\"*G");
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(71, stringTokenizer0.maxDelimCodePoint);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals(8, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.retDelims);
      assertFalse(stringTokenizer0.delimsChanged);
      assertNotNull(stringTokenizer0);
      
      stringTokenizer0.delimiters = null;
      // Undeclared exception!
      try { 
        stringTokenizer0.hasMoreTokens();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("", "");
      assertEquals(0, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(0, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertNotNull(stringTokenizer0);
      
      stringTokenizer0.maxPosition = 1;
      // Undeclared exception!
      try { 
        stringTokenizer0.hasMoreElements();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("% K8CLEYPK_<L(GBNV", "% K8CLEYPK_<L(GBNV", false);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(95, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(18, stringTokenizer0.maxPosition);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertNotNull(stringTokenizer0);
      
      stringTokenizer0.hasSurrogates = true;
      // Undeclared exception!
      try { 
        stringTokenizer0.hasMoreElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("H44p@:Y%a~-ut0K");
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals(32, stringTokenizer0.maxDelimCodePoint);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(15, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      assertNotNull(stringTokenizer0);
      
      stringTokenizer0.str = "h-lyV";
      // Undeclared exception!
      try { 
        stringTokenizer0.countTokens();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer(";8K(bWV]P1!", (String) null, false);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.delimsChanged);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(11, stringTokenizer0.maxPosition);
      assertEquals(0, stringTokenizer0.maxDelimCodePoint);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertNotNull(stringTokenizer0);
      
      // Undeclared exception!
      try { 
        stringTokenizer0.countTokens();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringTokenizer stringTokenizer0 = null;
      try {
        stringTokenizer0 = new StringTokenizer((String) null, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringTokenizer stringTokenizer0 = null;
      try {
        stringTokenizer0 = new StringTokenizer((String) null, "&lMTMc#}j!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringTokenizer stringTokenizer0 = null;
      try {
        stringTokenizer0 = new StringTokenizer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("", "");
      assertEquals(0, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(0, stringTokenizer0.maxPosition);
      assertNotNull(stringTokenizer0);
      
      // Undeclared exception!
      try { 
        stringTokenizer0.nextToken();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("]Tjy!7!1k");
      assertEquals(32, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(9, stringTokenizer0.maxPosition);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.retDelims);
      assertNotNull(stringTokenizer0);
      
      boolean boolean0 = stringTokenizer0.hasMoreTokens();
      assertTrue(boolean0);
      assertEquals(32, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(0, stringTokenizer0.newPosition);
      assertEquals(9, stringTokenizer0.maxPosition);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.retDelims);
      
      stringTokenizer0.delimsChanged = true;
      String string0 = stringTokenizer0.nextToken();
      assertEquals("]Tjy!7!1k", string0);
      assertEquals(32, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(9, stringTokenizer0.currentPosition);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(9, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.retDelims);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("", "\"M'77cxK<xxfEv");
      assertEquals(120, stringTokenizer0.maxDelimCodePoint);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(0, stringTokenizer0.maxPosition);
      assertNotNull(stringTokenizer0);
      
      int[] intArray0 = new int[3];
      stringTokenizer0.delimiterCodePoints = intArray0;
      boolean boolean0 = stringTokenizer0.isDelimiter(0);
      assertTrue(boolean0);
      assertEquals(120, stringTokenizer0.maxDelimCodePoint);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(0, stringTokenizer0.maxPosition);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("");
      assertEquals(0, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(0, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(32, stringTokenizer0.maxDelimCodePoint);
      assertNotNull(stringTokenizer0);
      
      int[] intArray0 = new int[4];
      stringTokenizer0.delimiterCodePoints = intArray0;
      boolean boolean0 = stringTokenizer0.isDelimiter((-859));
      assertFalse(boolean0);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(0, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(32, stringTokenizer0.maxDelimCodePoint);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("GW,. *]_8671m#^RJ9X", "GW,. *]_8671m#^RJ9X", true);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals(109, stringTokenizer0.maxDelimCodePoint);
      assertEquals(19, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertTrue(stringTokenizer0.retDelims);
      assertNotNull(stringTokenizer0);
      
      int int0 = stringTokenizer0.scanToken(0);
      assertEquals(1, int0);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals(109, stringTokenizer0.maxDelimCodePoint);
      assertEquals(19, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertTrue(stringTokenizer0.retDelims);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("", "", true);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.delimsChanged);
      assertTrue(stringTokenizer0.retDelims);
      assertEquals(0, stringTokenizer0.maxPosition);
      assertEquals(0, stringTokenizer0.maxDelimCodePoint);
      assertNotNull(stringTokenizer0);
      
      // Undeclared exception!
      try { 
        stringTokenizer0.scanToken(3090);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("e5Y", "e5Y", true);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertTrue(stringTokenizer0.retDelims);
      assertEquals(101, stringTokenizer0.maxDelimCodePoint);
      assertEquals(3, stringTokenizer0.maxPosition);
      assertNotNull(stringTokenizer0);
      
      stringTokenizer0.hasSurrogates = true;
      int[] intArray0 = new int[7];
      stringTokenizer0.delimiterCodePoints = intArray0;
      int int0 = stringTokenizer0.scanToken(0);
      assertEquals(3, int0);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertTrue(stringTokenizer0.retDelims);
      assertEquals(101, stringTokenizer0.maxDelimCodePoint);
      assertTrue(stringTokenizer0.hasSurrogates);
      assertEquals(3, stringTokenizer0.maxPosition);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("b5Y", "b5Y", true);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(98, stringTokenizer0.maxDelimCodePoint);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertTrue(stringTokenizer0.retDelims);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(3, stringTokenizer0.maxPosition);
      assertNotNull(stringTokenizer0);
      
      stringTokenizer0.hasSurrogates = true;
      String string0 = stringTokenizer0.nextToken("b5Y");
      assertEquals("b", string0);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(98, stringTokenizer0.maxDelimCodePoint);
      assertEquals(1, stringTokenizer0.currentPosition);
      assertTrue(stringTokenizer0.hasSurrogates);
      assertTrue(stringTokenizer0.retDelims);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(3, stringTokenizer0.maxPosition);
      assertNotNull(string0);
      
      int int0 = stringTokenizer0.scanToken(0);
      assertEquals(1, int0);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(98, stringTokenizer0.maxDelimCodePoint);
      assertEquals(1, stringTokenizer0.currentPosition);
      assertTrue(stringTokenizer0.hasSurrogates);
      assertTrue(stringTokenizer0.retDelims);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(3, stringTokenizer0.maxPosition);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("<;}pw%4T<)}", "<;}pw%4T<)}");
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(11, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals(125, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.delimsChanged);
      assertNotNull(stringTokenizer0);
      
      String string0 = stringTokenizer0.nextToken("StringTokenizer");
      assertEquals("<;}pw%4", string0);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(11, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(122, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(7, stringTokenizer0.currentPosition);
      assertNotNull(string0);
      
      int int0 = stringTokenizer0.scanToken(0);
      assertEquals(7, int0);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(11, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(122, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(7, stringTokenizer0.currentPosition);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("<;}pw%4T<)}", "<;}pw%4T<)}");
      assertEquals(125, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.retDelims);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(11, stringTokenizer0.maxPosition);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertNotNull(stringTokenizer0);
      
      int int0 = stringTokenizer0.scanToken(0);
      assertEquals(0, int0);
      assertEquals(125, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.retDelims);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(11, stringTokenizer0.maxPosition);
      assertEquals(0, stringTokenizer0.currentPosition);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("9tqLJ");
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals(32, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(5, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertFalse(stringTokenizer0.delimsChanged);
      assertNotNull(stringTokenizer0);
      
      stringTokenizer0.hasSurrogates = true;
      int int0 = stringTokenizer0.scanToken(0);
      assertEquals(5, int0);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals(32, stringTokenizer0.maxDelimCodePoint);
      assertEquals(5, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertTrue(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.delimsChanged);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("9tqLJ");
      assertEquals(32, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals(5, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertNotNull(stringTokenizer0);
      
      stringTokenizer0.hasSurrogates = true;
      stringTokenizer0.maxDelimCodePoint = 2668;
      // Undeclared exception!
      try { 
        stringTokenizer0.skipDelimiters(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("PWfJe5KZ");
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals(8, stringTokenizer0.maxPosition);
      assertEquals(32, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.retDelims);
      assertFalse(stringTokenizer0.delimsChanged);
      assertNotNull(stringTokenizer0);
      
      String string0 = stringTokenizer0.nextToken("z^^A*V`P \"");
      assertEquals("WfJe5KZ", string0);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(8, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(8, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(122, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.delimsChanged);
      assertNotNull(string0);
      
      int int0 = stringTokenizer0.skipDelimiters(0);
      assertEquals(1, int0);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(8, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(8, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(122, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.delimsChanged);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("$-}f20/DbM{SdR");
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(14, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(32, stringTokenizer0.maxDelimCodePoint);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertNotNull(stringTokenizer0);
      
      int int0 = stringTokenizer0.skipDelimiters(0);
      assertEquals(0, int0);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(14, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(32, stringTokenizer0.maxDelimCodePoint);
      assertEquals(0, stringTokenizer0.currentPosition);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("", "LV 7z");
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(0, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(122, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.retDelims);
      assertNotNull(stringTokenizer0);
      
      int int0 = stringTokenizer0.skipDelimiters(0);
      assertEquals(0, int0);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(0, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(122, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.retDelims);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("", (String) null);
      assertEquals(0, stringTokenizer0.maxPosition);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(0, stringTokenizer0.maxDelimCodePoint);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.delimsChanged);
      assertFalse(stringTokenizer0.retDelims);
      assertNotNull(stringTokenizer0);
      
      // Undeclared exception!
      try { 
        stringTokenizer0.skipDelimiters(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer(" `");
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(32, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(2, stringTokenizer0.maxPosition);
      assertNotNull(stringTokenizer0);
      
      int int0 = stringTokenizer0.setMaxDelimCodePoint();
      assertEquals(32, int0);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(32, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(2, stringTokenizer0.maxPosition);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("", (String) null);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(0, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(0, stringTokenizer0.maxPosition);
      assertNotNull(stringTokenizer0);
      
      int int0 = stringTokenizer0.setMaxDelimCodePoint();
      assertEquals(0, int0);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(0, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(0, stringTokenizer0.maxPosition);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("9tqLJ");
      assertEquals(32, stringTokenizer0.maxDelimCodePoint);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals(5, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.delimsChanged);
      assertFalse(stringTokenizer0.retDelims);
      assertNotNull(stringTokenizer0);
      
      String string0 = stringTokenizer0.nextToken();
      assertEquals("9tqLJ", string0);
      assertEquals(32, stringTokenizer0.maxDelimCodePoint);
      assertEquals(5, stringTokenizer0.currentPosition);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(5, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.delimsChanged);
      assertFalse(stringTokenizer0.retDelims);
      assertNotNull(string0);
      
      boolean boolean0 = stringTokenizer0.hasMoreTokens();
      assertFalse(boolean0);
      assertEquals(32, stringTokenizer0.maxDelimCodePoint);
      assertEquals(5, stringTokenizer0.currentPosition);
      assertEquals(5, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(5, stringTokenizer0.newPosition);
      assertFalse(stringTokenizer0.retDelims);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("1EkLSe>^t3D,*cdP,2", "1EkLSe>^t3D,*cdP,2");
      assertEquals(18, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertFalse(stringTokenizer0.delimsChanged);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals(116, stringTokenizer0.maxDelimCodePoint);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertNotNull(stringTokenizer0);
      
      stringTokenizer0.retDelims = true;
      stringTokenizer0.hasSurrogates = true;
      int int0 = stringTokenizer0.setMaxDelimCodePoint();
      assertEquals(116, int0);
      assertTrue(stringTokenizer0.hasSurrogates);
      assertEquals(18, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals(116, stringTokenizer0.maxDelimCodePoint);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertTrue(stringTokenizer0.retDelims);
      
      int int1 = stringTokenizer0.countTokens();
      assertEquals(18, int1);
      assertTrue(stringTokenizer0.hasSurrogates);
      assertEquals(18, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals(116, stringTokenizer0.maxDelimCodePoint);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertTrue(stringTokenizer0.retDelims);
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("SHjrz", "SHjrz");
      assertEquals(122, stringTokenizer0.maxDelimCodePoint);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(5, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertNotNull(stringTokenizer0);
      
      stringTokenizer0.hasSurrogates = true;
      stringTokenizer0.newPosition = 0;
      int int0 = stringTokenizer0.setMaxDelimCodePoint();
      assertEquals(122, int0);
      assertTrue(stringTokenizer0.hasSurrogates);
      assertEquals(122, stringTokenizer0.maxDelimCodePoint);
      assertEquals(0, stringTokenizer0.newPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(5, stringTokenizer0.maxPosition);
      
      String string0 = stringTokenizer0.nextToken();
      assertEquals("", string0);
      assertTrue(stringTokenizer0.hasSurrogates);
      assertEquals(122, stringTokenizer0.maxDelimCodePoint);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(5, stringTokenizer0.maxPosition);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("dWe)~H/'H");
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(9, stringTokenizer0.maxPosition);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(32, stringTokenizer0.maxDelimCodePoint);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertNotNull(stringTokenizer0);
      
      stringTokenizer0.hasSurrogates = true;
      Object object0 = stringTokenizer0.nextElement();
      assertEquals("dWe)~H/'H", object0);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(9, stringTokenizer0.maxPosition);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      assertTrue(stringTokenizer0.hasSurrogates);
      assertEquals(9, stringTokenizer0.currentPosition);
      assertEquals(32, stringTokenizer0.maxDelimCodePoint);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("SHjrz", "SHjrz");
      assertEquals(122, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.delimsChanged);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(5, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertNotNull(stringTokenizer0);
      
      int[] intArray0 = new int[6];
      stringTokenizer0.delimiterCodePoints = intArray0;
      stringTokenizer0.hasSurrogates = true;
      int int0 = stringTokenizer0.countTokens();
      assertEquals(1, int0);
      assertEquals(122, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.delimsChanged);
      assertTrue(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(5, stringTokenizer0.maxPosition);
      assertEquals(0, stringTokenizer0.currentPosition);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("SHjrz", "SHjrz");
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(5, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertEquals(122, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.delimsChanged);
      assertNotNull(stringTokenizer0);
      
      stringTokenizer0.hasSurrogates = true;
      int int0 = stringTokenizer0.setMaxDelimCodePoint();
      assertEquals(122, int0);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(5, stringTokenizer0.maxPosition);
      assertTrue(stringTokenizer0.hasSurrogates);
      assertEquals(122, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.delimsChanged);
      
      int int1 = stringTokenizer0.countTokens();
      assertEquals(0, int1);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(5, stringTokenizer0.maxPosition);
      assertTrue(stringTokenizer0.hasSurrogates);
      assertEquals(122, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.delimsChanged);
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("9tqLJ");
      assertEquals(5, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(32, stringTokenizer0.maxDelimCodePoint);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertNotNull(stringTokenizer0);
      
      stringTokenizer0.hasSurrogates = true;
      int int0 = stringTokenizer0.skipDelimiters(0);
      assertEquals(0, int0);
      assertEquals(5, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals(32, stringTokenizer0.maxDelimCodePoint);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertFalse(stringTokenizer0.retDelims);
      assertTrue(stringTokenizer0.hasSurrogates);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("SHjrz", "SHjrz");
      assertFalse(stringTokenizer0.delimsChanged);
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(0, stringTokenizer0.currentPosition);
      assertEquals(5, stringTokenizer0.maxPosition);
      assertFalse(stringTokenizer0.hasSurrogates);
      assertFalse(stringTokenizer0.retDelims);
      assertEquals(122, stringTokenizer0.maxDelimCodePoint);
      assertNotNull(stringTokenizer0);
      
      stringTokenizer0.hasSurrogates = true;
      // Undeclared exception!
      try { 
        stringTokenizer0.countTokens();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("1EkLSe>^t3D,*cdP,2", "1EkLSe>^t3D,*cdP,2");
      stringTokenizer0.retDelims = true;
      int int0 = stringTokenizer0.countTokens();
      assertEquals((-1), stringTokenizer0.newPosition);
      assertEquals(18, int0);
      assertEquals(116, stringTokenizer0.maxDelimCodePoint);
      assertFalse(stringTokenizer0.hasSurrogates);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("dWe)~H/'H");
      stringTokenizer0.nextElement();
      // Undeclared exception!
      try { 
        stringTokenizer0.nextToken(">N");
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      StringTokenizer stringTokenizer0 = new StringTokenizer("", (String) null);
      // Undeclared exception!
      try { 
        stringTokenizer0.hasMoreElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("StringTokenizer", e);
      }
  }
}
