/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 24 05:41:58 GMT 2021
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.ref.WeakReference;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

public class XmlFriendlyNameCoder_ESTest {
    @Test(timeout = 4000)
    public void test3()  throws Throwable  {
      XmlFriendlyNameCoder xmlFriendlyNameCoder0 = new XmlFriendlyNameCoder("444", "555");
      HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
      xmlFriendlyNameCoder0.escapeCache = (Map) hashMap0;
      String string0 = xmlFriendlyNameCoder0.encodeName("$");
      assertEquals("444", string0);
      assertNotNull(string0);
    }
    @Test(timeout = 4000)
    public void test4()  throws Throwable  {
      XmlFriendlyNameCoder xmlFriendlyNameCoder0 = new XmlFriendlyNameCoder("444", "555");
      HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
      xmlFriendlyNameCoder0.escapeCache = (Map) hashMap0;
      String string0 = xmlFriendlyNameCoder0.encodeName("_");
      assertEquals("555", string0);
      assertNotNull(string0);
    }
}
