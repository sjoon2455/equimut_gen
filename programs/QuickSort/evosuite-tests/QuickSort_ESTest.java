/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 22 06:51:00 GMT 2021
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

public class QuickSort_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      QuickSort quickSort0 = new QuickSort();
      // Undeclared exception!
      try { 
        quickSort0.sort((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("QuickSort", e);
      }
  }
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      QuickSort quickSort0 = new QuickSort();
      int[] intArray0 = new int[6];
      intArray0[0] = 6;
      intArray0[1] = 5;
      intArray0[2] = 4;
      intArray0[3] = 3;
      intArray0[4] = 2;
      intArray0[5] = 1;
      intArray0 = quickSort0.sort(intArray0);
      assertArrayEquals(new int[] {1, 2, 3, 4, 5, 6}, intArray0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      QuickSort quickSort0 = new QuickSort();
      int[] intArray0 = new int[6];
      intArray0[0] = 6;
      intArray0[1] = 5;
      intArray0[2] = 4;
      intArray0[3] = -3;
      intArray0[4] = 2;
      intArray0[5] = 1;
      intArray0 = quickSort0.sort(intArray0);
      assertArrayEquals(new int[] {-3, 1, 2, 4, 5, 6}, intArray0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      QuickSort quickSort0 = new QuickSort();
      int[] intArray0 = new int[6];
      intArray0[0] = 1;
      intArray0[1] = 2;
      intArray0[2] = 3;
      intArray0[3] = 4;
      intArray0[4] = 6;
      intArray0[5] = 5;
      intArray0 = quickSort0.sort(intArray0);
      assertArrayEquals(new int[] {1, 2, 3, 4, 5, 6}, intArray0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      QuickSort quickSort0 = new QuickSort();
      int[] intArray0 = new int[6];
      intArray0[0] = 1;
      intArray0[1] = 4;
      intArray0[2] = 1;
      intArray0[3] = 2;
      intArray0[4] = 1;
      intArray0[5] = 3;
      intArray0 = quickSort0.sort(intArray0);
      assertArrayEquals(new int[] {1, 1, 1, 2, 3, 4}, intArray0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      QuickSort quickSort0 = new QuickSort();
      int[] intArray0 = new int[10];
      intArray0[6] = 250;
      intArray0[1] = 250;
      intArray0 = quickSort0.sort(intArray0);
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0, 0, 250, 250}, intArray0);
  }
}
